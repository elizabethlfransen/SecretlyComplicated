package io.github.elizabethlfransen.secretlycomplicated.register;

import io.github.elizabethlfransen.secretlycomplicated.element.SCElement;
import io.github.noeppi_noeppi.libx.annotation.registration.NoReg;
import io.github.noeppi_noeppi.libx.annotation.registration.RegisterClass;

import java.util.Arrays;
import java.util.Set;
import java.util.stream.Collectors;

import static io.github.elizabethlfransen.secretlycomplicated.materialform.CommonMaterialFormFactories.parts;

@RegisterClass
public final class ModElements {
    public static final SCElement hydrogen = SCElement.builder()
            .atomicNumber(1)
            .name("hydrogen")
            .color(0xff1a7d)
            .melting(-259)
            .boiling(-252)
            .withForms(parts)
            .build();
    public static final SCElement helium = SCElement.builder()
            .atomicNumber(2)
            .name("helium")
            .color(0xffc6e0)
            .melting(-272)
            .boiling(-268)
            .withForms(parts)
            .build();
    public static final SCElement lithium = SCElement.builder()
            .atomicNumber(3)
            .name("lithium")
            .color(0xe5e5e5)
            .melting(180)
            .boiling(1342)
            .withForms(parts)
            .metallic()
            .build(); // atomic spectral emission color: 0xff1852
    public static final SCElement beryllium = SCElement.builder()
            .atomicNumber(4)
            .name("beryllium")
            .color(0xcccccc)
            .melting(1286)
            .boiling(2469)
            .withForms(parts)
            .metallic()
            .build(); // atomic spectral emission color: 0x1e4cff
    public static final SCElement boron = SCElement.builder()
            .atomicNumber(5)
            .name("boron")
            .color(0xb2b2b2)
            .melting(2076)
            .boiling(4000)
            .withForms(parts)
            .metallic()
            .build();// atomic spectral emission color: 0x4132ff
    public static final SCElement carbon = SCElement.builder()
            .atomicNumber(6)
            .name("carbon")
            .color(0xebffc1)
            .melting(3500)
            .boiling(9999)
            .withForms(parts)
            .build();
    public static final SCElement nitrogen = SCElement.builder()
            .atomicNumber(7)
            .name("nitrogen")
            .color(0xe795ff)
            .melting(-210)
            .boiling(-195)
            .withForms(parts)
            .build();
    public static final SCElement oxygen = SCElement.builder()
            .atomicNumber(8)
            .name("oxygen")
            .color(0xb8bfff)
            .melting(-218)
            .boiling(-182)
            .withForms(parts)
            .build();
    public static final SCElement fluorine = SCElement.builder()
            .atomicNumber(9)
            .name("fluorine")
            .color(0xff1765)
            .melting(-219)
            .boiling(-188)
            .withForms(parts)
            .build();
    public static final SCElement neon = SCElement.builder()
            .atomicNumber(10)
            .name("neon")
            .color(0xff4022)
            .melting(-248)
            .boiling(-246)
            .withForms(parts)
            .build();

    public static final SCElement sodium = SCElement.builder()
            .atomicNumber(11)
            .name("sodium")
            .color(0xf7f7f7)
            .melting(97)
            .boiling(882)
            .withForms(parts)
            .metallic()
            .build(); // atomic spectral emission color: 0xffad1d
    public static final SCElement magnesium = SCElement.builder()
            .atomicNumber(12)
            .name("magnesium")
            .color(0xdedede)
            .melting(650)
            .boiling(1091)
            .withForms(parts)
            .metallic()
            .build(); // atomic spectral emission color: 0x55faff
    public static final SCElement aluminium = SCElement.builder()
            .atomicNumber(13)
            .name("aluminium")
            .color(0xc7c7c7)
            .melting(660)
            .boiling(2470)
            .withForms(parts)
            .metallic()
            .build(); // atomic spectral emission color: 0x4c95ff
    public static final SCElement silicon = SCElement.builder()
            .atomicNumber(14)
            .name("silicon")
            .color(0xbbceff)
            .melting(1410)
            .boiling(2355)
            .withForms(parts)
            .metallic()
            .build();
    public static final SCElement phosphorus = SCElement.builder()
            .atomicNumber(15)
            .name("phosphorus")
            .color(0x36fec8)
            .melting(44)
            .boiling(280)
            .withForms(parts)
            .build();
    public static final SCElement sulfur = SCElement.builder()
            .atomicNumber(16)
            .name("sulfur")
            .color(0x6fb0ff)
            .melting(112)
            .boiling(444)
            .withForms(parts)
            .build();
    public static final SCElement chlorine = SCElement.builder()
            .atomicNumber(17)
            .name("chlorine")
            .color(0x76b1ff)
            .melting(-101)
            .boiling(-34)
            .withForms(parts)
            .build();
    public static final SCElement argon = SCElement.builder()
            .atomicNumber(18)
            .name("argon")
            .color(0xff6afe)
            .melting(-189)
            .boiling(-185)
            .withForms(parts)
            .build();

    public static final SCElement potassium = SCElement.builder()
            .atomicNumber(19)
            .name("potassium")
            .color(0xdab4ff)
            .melting(63)
            .boiling(758)
            .withForms(parts)
            .metallic()
            .build();
    public static final SCElement calcium = SCElement.builder()
            .atomicNumber(20)
            .name("calcium")
            .color(0xfe78bf)
            .melting(842)
            .boiling(1483)
            .withForms(parts)
            .metallic()
            .build();
    public static final SCElement scandium = SCElement.builder()
            .atomicNumber(21)
            .name("scandium")
            .color(0xe0a5ff)
            .melting(1540)
            .boiling(2835)
            .withForms(parts)
            .metallic()
            .build();
    public static final SCElement titanium = SCElement.builder()
            .atomicNumber(22)
            .name("titanium")
            .color(0x57a0fe)
            .melting(1668)
            .boiling(3286)
            .withForms(parts)
            .metallic()
            .build();
    public static final SCElement vanadium = SCElement.builder()
            .atomicNumber(23)
            .name("vanadium")
            .color(0xe8cfff)
            .melting(1910)
            .boiling(3407)
            .withForms(parts)
            .metallic()
            .build();
    public static final SCElement chromium = SCElement.builder()
            .atomicNumber(24)
            .name("chromium")
            .color(0x63c2fe)
            .melting(1907)
            .boiling(2671)
            .withForms(parts)
            .metallic()
            .build();
    public static final SCElement manganese = SCElement.builder()
            .atomicNumber(25)
            .name("manganese")
            .color(0x435eff)
            .melting(1246)
            .boiling(2061)
            .withForms(parts)
            .metallic()
            .build();
    public static final SCElement iron = SCElement.builder()
            .atomicNumber(26)
            .name("iron")
            .color(0xffffff)
            .melting(1538)
            .boiling(2862)
            .withForms(parts)
            .metallic()
            .build(); // atomic spectral emission color: 0x32eaff
    public static final SCElement cobalt = SCElement.builder()
            .atomicNumber(27)
            .name("cobalt")
            .color(0x41fffa)
            .melting(1495)
            .boiling(2869)
            .withForms(parts)
            .metallic()
            .build();
    public static final SCElement nickel = SCElement.builder()
            .atomicNumber(28)
            .name("nickel")
            .color(0x35f5ff)
            .melting(1455)
            .boiling(2730)
            .withForms(parts)
            .metallic()
            .build();
    public static final SCElement copper = SCElement.builder()
            .atomicNumber(29)
            .name("copper")
            .color(0xda7953)
            .melting(1084)
            .boiling(2562)
            .withForms(parts)
            .metallic()
            .build(); // atomic spectral emission color: 0x7effcf
    public static final SCElement zinc = SCElement.builder()
            .atomicNumber(30)
            .name("zinc")
            .color(0x91898d)
            .melting(419)
            .boiling(907)
            .withForms(parts)
            .metallic()
            .build(); // atomic spectral emission color: 0x3941ff
    public static final SCElement gallium = SCElement.builder()
            .atomicNumber(31)
            .name("gallium")
            .color(0x7625ff)
            .melting(29)
            .boiling(2400)
            .withForms(parts)
            .metallic()
            .build();
    public static final SCElement germanium = SCElement.builder()
            .atomicNumber(32)
            .name("germanium")
            .color(0xe5ffd5)
            .melting(938)
            .boiling(2833)
            .withForms(parts)
            .metallic()
            .build();
    public static final SCElement arsenic = SCElement.builder()
            .atomicNumber(33)
            .name("arsenic")
            .color(0x339cff)
            .melting(816)
            .boiling(613)
            .withForms(parts)
            .metallic()
            .build();
    public static final SCElement selenium = SCElement.builder()
            .atomicNumber(34)
            .name("selenium")
            .color(0x4bb2ff)
            .melting(220)
            .boiling(684)
            .withForms(parts)
            .build();
    public static final SCElement bromine = SCElement.builder()
            .atomicNumber(35)
            .name("bromine")
            .color(0x86bfff)
            .melting(-7)
            .boiling(58)
            .withForms(parts)
            .build();
    public static final SCElement krypton = SCElement.builder()
            .atomicNumber(36)
            .name("krypton")
            .color(0xffc2ef)
            .melting(-157)
            .boiling(-153)
            .withForms(parts)
            .build();

    public static final SCElement rubidium = SCElement.builder()
            .atomicNumber(37)
            .name("rubidium")
            .color(0xff4d81)
            .melting(63)
            .boiling(758)
            .withForms(parts)
            .metallic()
            .build();
    public static final SCElement strontium = SCElement.builder()
            .atomicNumber(38)
            .name("strontium")
            .color(0xfe69c3)
            .melting(842)
            .boiling(1483)
            .withForms(parts)
            .metallic()
            .build();
    public static final SCElement yttrium = SCElement.builder()
            .atomicNumber(39)
            .name("yttrium")
            .color(0xffecf1)
            .melting(1540)
            .boiling(2835)
            .withForms(parts)
            .metallic()
            .build();
    public static final SCElement zirconium = SCElement.builder()
            .atomicNumber(40)
            .name("zirconium")
            .color(0x67d8ff)
            .melting(1668)
            .boiling(3286)
            .withForms(parts)
            .metallic()
            .build();
    public static final SCElement niobium = SCElement.builder()
            .atomicNumber(41)
            .name("niobium")
            .color(0x6cc2ff)
            .melting(1910)
            .boiling(3407)
            .withForms(parts)
            .metallic()
            .build();
    public static final SCElement molybdenum = SCElement.builder()
            .atomicNumber(42)
            .name("molybdenum")
            .color(0x8aa1fe)
            .melting(1907)
            .boiling(2671)
            .withForms(parts)
            .metallic()
            .build();
    public static final SCElement technetium = SCElement.builder()
            .atomicNumber(43)
            .name("technetium")
            .color(0x4780ff)
            .melting(1246)
            .boiling(2061)
            .withForms(parts)
            .metallic()
            .build();
    public static final SCElement ruthenium = SCElement.builder()
            .atomicNumber(44)
            .name("ruthenium")
            .color(0x447fff)
            .melting(1538)
            .boiling(2862)
            .withForms(parts)
            .metallic()
            .build();
    public static final SCElement rhodium = SCElement.builder()
            .atomicNumber(45)
            .name("rhodium")
            .color(0x7cffd7)
            .melting(1495)
            .boiling(2869)
            .withForms(parts)
            .metallic()
            .build();
    public static final SCElement palladium = SCElement.builder()
            .atomicNumber(46)
            .name("palladium")
            .color(0x4effde)
            .melting(1455)
            .boiling(2730)
            .withForms(parts)
            .metallic()
            .build();
    public static final SCElement silver = SCElement.builder()
            .atomicNumber(47)
            .name("silver")
            .color(0x32ffa3)
            .melting(1084)
            .boiling(2562)
            .withForms(parts)
            .metallic()
            .build();
    public static final SCElement cadmium = SCElement.builder()
            .atomicNumber(48)
            .name("cadmium")
            .color(0x6098fe)
            .melting(419)
            .boiling(907)
            .withForms(parts)
            .metallic()
            .build();
    public static final SCElement indium = SCElement.builder()
            .atomicNumber(49)
            .name("indium")
            .color(0x7745ff)
            .melting(29)
            .boiling(2400)
            .withForms(parts)
            .metallic()
            .build();
    public static final SCElement tin = SCElement.builder()
            .atomicNumber(50)
            .name("tin")
            .color(0xffbefc)
            .melting(938)
            .boiling(2833)
            .withForms(parts)
            .metallic()
            .build();
    public static final SCElement antimony = SCElement.builder()
            .atomicNumber(51)
            .name("antimony")
            .color(0xefe7ff)
            .melting(816)
            .boiling(613)
            .withForms(parts)
            .metallic()
            .build();
    public static final SCElement tellurium = SCElement.builder()
            .atomicNumber(52)
            .name("tellurium")
            .color(0x47d7ff)
            .melting(220)
            .boiling(684)
            .withForms(parts)
            .metallic()
            .build();
    public static final SCElement iodine = SCElement.builder()
            .atomicNumber(53)
            .name("iodine")
            .color(0x9fffdb)
            .melting(-7)
            .boiling(58)
            .withForms(parts)
            .build();
    public static final SCElement xenon = SCElement.builder()
            .atomicNumber(54)
            .name("xenon")
            .color(0xab94ff)
            .melting(-157)
            .boiling(-153)
            .withForms(parts)
            .build();

    public static final SCElement caesium = SCElement.builder()
            .atomicNumber(55)
            .name("caesium")
            .color(0x9268ff)
            .melting(28)
            .boiling(670)
            .withForms(parts)
            .metallic()
            .build();
    public static final SCElement barium = SCElement.builder()
            .atomicNumber(56)
            .name("barium")
            .color(0xffc090)
            .melting(727)
            .boiling(1897)
            .withForms(parts)
            .metallic()
            .build();
    public static final SCElement lanthanum = SCElement.builder()
            .atomicNumber(57)
            .name("lanthanum")
            .color(0x7f98ff)
            .melting(920)
            .boiling(3463)
            .withForms(parts)
            .metallic()
            .build();

    public static final SCElement cerium = SCElement.builder()
            .atomicNumber(58)
            .name("cerium")
            .color(0x69dffe)
            .melting(795)
            .boiling(3257)
            .withForms(parts)
            .metallic()
            .build();
    public static final SCElement praseodymium = SCElement.builder()
            .atomicNumber(59)
            .name("praseodymium")
            .color(0x507fff)
            .melting(930)
            .boiling(3520)
            .withForms(parts)
            .metallic()
            .build();
    public static final SCElement neodymium = SCElement.builder()
            .atomicNumber(60)
            .name("neodymium")
            .color(0x4168ff)
            .melting(1020)
            .boiling(3073)
            .withForms(parts)
            .metallic()
            .build();
    public static final SCElement promethium = SCElement.builder()
            .atomicNumber(61)
            .name("promethium")
            .color(0x8085ff)
            .melting(1041)
            .boiling(2999)
            .withForms(parts)
            .metallic()
            .build();
    public static final SCElement samarium = SCElement.builder()
            .atomicNumber(62)
            .name("samarium")
            .color(0x87a5ff)
            .melting(1072)
            .boiling(1793)
            .withForms(parts)
            .metallic()
            .build();
    public static final SCElement europium = SCElement.builder()
            .atomicNumber(63)
            .name("europium")
            .color(0xeecaff)
            .melting(826)
            .boiling(1529)
            .withForms(parts)
            .metallic()
            .build();
    public static final SCElement gadolinium = SCElement.builder()
            .atomicNumber(64)
            .name("gadolinium")
            .color(0xfec1fc)
            .melting(1311)
            .boiling(3271)
            .withForms(parts)
            .metallic()
            .build();
    public static final SCElement terbium = SCElement.builder()
            .atomicNumber(65)
            .name("terbium")
            .color(0xa2feed)
            .melting(1355)
            .boiling(3230)
            .withForms(parts)
            .metallic()
            .build();
    public static final SCElement dysprosium = SCElement.builder()
            .atomicNumber(66)
            .name("dysprosium")
            .color(0x79d7ff)
            .melting(1411)
            .boiling(2566)
            .withForms(parts)
            .metallic()
            .build();
    public static final SCElement holmium = SCElement.builder()
            .atomicNumber(67)
            .name("holmium")
            .color(0x9cffc9)
            .melting(1474)
            .boiling(2694)
            .withForms(parts)
            .metallic()
            .build();
    public static final SCElement erbium = SCElement.builder()
            .atomicNumber(68)
            .name("erbium")
            .color(0x5effe1)
            .melting(1528)
            .boiling(2868)
            .withForms(parts)
            .metallic()
            .build();
    public static final SCElement thulium = SCElement.builder()
            .atomicNumber(69)
            .name("thulium")
            .color(0x60f4ff)
            .melting(1544)
            .boiling(1950)
            .withForms(parts)
            .metallic()
            .build();
    public static final SCElement ytterbium = SCElement.builder()
            .atomicNumber(70)
            .name("ytterbium")
            .color(0xb2f5ff)
            .melting(819)
            .boiling(1195)
            .withForms(parts)
            .metallic()
            .build();
    public static final SCElement lutetium = SCElement.builder()
            .atomicNumber(71)
            .name("lutetium")
            .color(0xb1faff)
            .melting(1663)
            .boiling(3402)
            .withForms(parts)
            .metallic()
            .build();

    public static final SCElement hafnium = SCElement.builder()
            .atomicNumber(72)
            .name("hafnium")
            .color(0x6f95ff)
            .melting(2227)
            .boiling(4601)
            .withForms(parts)
            .metallic()
            .build();
    public static final SCElement tantalum = SCElement.builder()
            .atomicNumber(73)
            .name("tantalum")
            .color(0x68ceff)
            .melting(3019)
            .boiling(5456)
            .withForms(parts)
            .metallic()
            .build();
    public static final SCElement tungsten = SCElement.builder()
            .atomicNumber(74)
            .name("tungsten")
            .color(0x49d5ff)
            .melting(3421)
            .boiling(5555)
            .withForms(parts)
            .metallic()
            .build();
    public static final SCElement rhenium = SCElement.builder()
            .atomicNumber(75)
            .name("rhenium")
            .color(0x61a9fe)
            .melting(3181)
            .boiling(5596)
            .withForms(parts)
            .metallic()
            .build();
    public static final SCElement osmium = SCElement.builder()
            .atomicNumber(76)
            .name("osmium")
            .color(0x3e94ff)
            .melting(3033)
            .boiling(5026)
            .withForms(parts)
            .metallic()
            .build();
    public static final SCElement iridium = SCElement.builder()
            .atomicNumber(77)
            .name("iridium")
            .color(0x3e7eff)
            .melting(2446)
            .boiling(4428)
            .withForms(parts)
            .metallic()
            .build();
    public static final SCElement platinum = SCElement.builder()
            .atomicNumber(78)
            .name("platinum")
            .color(0x5695ff)
            .melting(1768)
            .boiling(3825)
            .withForms(parts)
            .metallic()
            .build();
    public static final SCElement gold = SCElement.builder()
            .atomicNumber(79)
            .name("gold")
            .color(0xa38eff)
            .melting(1064)
            .boiling(2700)
            .withForms(parts)
            .metallic()
            .build();
    public static final SCElement mercury = SCElement.builder()
            .atomicNumber(80)
            .name("mercury")
            .color(0x93f8ff)
            .melting(-38)
            .boiling(356)
            .withForms(parts)
            .metallic()
            .build();
    public static final SCElement thallium = SCElement.builder()
            .atomicNumber(81)
            .name("thallium")
            .color(0x1eff47)
            .melting(303)
            .boiling(1472)
            .withForms(parts)
            .metallic()
            .build();
    public static final SCElement lead = SCElement.builder()
            .atomicNumber(82)
            .name("lead")
            .color(0xa9ecff)
            .melting(327)
            .boiling(1749)
            .withForms(parts)
            .metallic()
            .build();
    public static final SCElement bismuth = SCElement.builder()
            .atomicNumber(83)
            .name("bismuth")
            .color(0x6b97ff)
            .melting(271)
            .boiling(1564)
            .withForms(parts)
            .metallic()
            .build();
    public static final SCElement polonium = SCElement.builder()
            .atomicNumber(84)
            .name("polonium")
            .color(0x4a8dff)
            .melting(254)
            .boiling(962)
            .withForms(parts)
            .metallic()
            .build();
    public static final SCElement astatine = SCElement.builder()
            .atomicNumber(85)
            .name("astatine")
            .color(0x444444)
            .melting(301)
            .boiling(336)
            .withForms(parts)
            .metallic()
            .build();
    public static final SCElement radon = SCElement.builder()
            .atomicNumber(86)
            .name("radon")
            .color(0xff19a1)
            .melting(-71)
            .boiling(-61)
            .withForms(parts)
            .build();

    public static final SCElement francium = SCElement.builder()
            .atomicNumber(87)
            .name("francium")
            .color(0xfe8146)
            .melting(27)
            .boiling(676)
            .withForms(parts)
            .metallic()
            .build();
    public static final SCElement radium = SCElement.builder()
            .atomicNumber(88)
            .name("radium")
            .color(0xff5a64)
            .melting(700)
            .boiling(1737)
            .withForms(parts)
            .metallic()
            .build();
    public static final SCElement actinium = SCElement.builder()
            .atomicNumber(89)
            .name("actinium")
            .color(0xc1e6ff)
            .melting(1050)
            .boiling(3196)
            .withForms(parts)
            .metallic()
            .build();

    public static final SCElement thorium = SCElement.builder()
            .atomicNumber(90)
            .name("thorium")
            .color(0x8bf5ff)
            .melting(1754)
            .boiling(4786)
            .withForms(parts)
            .metallic()
            .build();
    public static final SCElement protactinium = SCElement.builder()
            .atomicNumber(91)
            .name("protactinium")
            .color(0xe80aff)
            .melting(1568)
            .boiling(4000)
            .withForms(parts)
            .metallic()
            .build();
    public static final SCElement uranium = SCElement.builder()
            .atomicNumber(92)
            .name("uranium")
            .color(0xa0bbff)
            .melting(1132)
            .boiling(4131)
            .withForms(parts)
            .metallic()
            .build();
    public static final SCElement neptunium = SCElement.builder()
            .atomicNumber(93)
            .name("neptunium")
            .color(0xffbf29)
            .melting(644)
            .boiling(3901)
            .withForms(parts)
            .metallic()
            .build();
    public static final SCElement plutonium = SCElement.builder()
            .atomicNumber(94)
            .name("plutonium")
            .color(0xff40d7)
            .melting(639)
            .boiling(3231)
            .withForms(parts)
            .metallic()
            .build();
    public static final SCElement americium = SCElement.builder()
            .atomicNumber(95)
            .name("americium")
            .color(0x996fff)
            .melting(1175)
            .boiling(2606)
            .withForms(parts)
            .metallic()
            .build();
    public static final SCElement curium = SCElement.builder()
            .atomicNumber(96)
            .name("curium")
            .color(0xff31c3)
            .melting(1346)
            .boiling(3109)
            .withForms(parts)
            .metallic()
            .build();
    public static final SCElement berkelium = SCElement.builder()
            .atomicNumber(97)
            .name("berkelium")
            .color(0x48ff5e)
            .melting(984)
            .boiling(2627)
            .withForms(parts)
            .metallic()
            .build();
    public static final SCElement californium = SCElement.builder()
            .atomicNumber(98)
            .name("californium")
            .color(0x94fec1)
            .melting(898)
            .boiling(1472)
            .withForms(parts)
            .metallic()
            .build();
    public static final SCElement einsteinium = SCElement.builder()
            .atomicNumber(99)
            .name("einsteinium")
            .color(0x13ffb7)
            .melting(860)
            .boiling(9999)
            .withForms(parts)
            .metallic()
            .build();
    public static final SCElement fermium = SCElement.builder()
            .atomicNumber(100)
            .name("fermium")
            .color(0x444444)
            .melting(1526)
            .boiling(9999)
            .withForms(parts)
            .metallic()
            .build();
    public static final SCElement mendelevium = SCElement.builder()
            .atomicNumber(101)
            .name("mendelevium")
            .color(0x444444)
            .melting(926)
            .boiling(9999)
            .withForms(parts)
            .metallic()
            .build();
    public static final SCElement nobelium = SCElement.builder()
            .atomicNumber(102)
            .name("nobelium")
            .color(0x444444)
            .melting(826)
            .boiling(9999)
            .withForms(parts)
            .metallic()
            .build();
    public static final SCElement lawrencium = SCElement.builder()
            .atomicNumber(103)
            .name("lawrencium")
            .color(0x444444)
            .melting(1627)
            .boiling(9999)
            .withForms(parts)
            .metallic()
            .build();
    @NoReg
    private static final Set<SCElement> values = Arrays.stream(ModElements.class.getDeclaredFields())
            .filter(f -> f.getType() == SCElement.class)
            .map(f -> {
                try {
                    return (SCElement) f.get(null);
                } catch (IllegalAccessException e) {
                    throw new RuntimeException(e);
                }
            })
            .collect(Collectors.toUnmodifiableSet());

    private ModElements() {
        throw new UnsupportedOperationException("This is a utility class and cannot be instantiated");
    }

    public static Set<SCElement> getValues() {
        return ModElements.values;
    }
}
